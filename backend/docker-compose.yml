version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres_db
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    volumes:
      - ./databases/postgres/pgdata:/var/lib/postgresql/data
    networks:
      - backend

  mongo:
    image: mongo:6
    container_name: mongo_db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./databases/mongo/data:/data/db
    networks:
      - backend

  redis:
    image: redis:7
    container_name: redis_db
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - ./databases/redis:/data
    networks:
      - backend

  service1:
    build: ./services/service1
    container_name: service1
    restart: always
    depends_on:
      - postgres
      - redis
    env_file: .env
    environment:
      DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres_db:5432/$POSTGRES_DB
      REDIS_URL: redis://redis_db:6379
    ports:
      - "4000:4000"
    networks:
      - backend

  service2:
    build: ./services/service2
    container_name: service2
    restart: always
    depends_on:
      - mongo
    env_file: .env
    environment:
      MONGO_URL: mongodb://mongo_db:27017
    ports:
      - "5000:5000"
    networks:
      - backend

networks:
  backend:
    driver: bridge